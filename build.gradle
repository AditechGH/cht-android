buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:1.2.3'
	}
}

apply plugin: 'android'

// enable verbose lint warnings
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:deprecation'
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	/* UPSTREAM */ //maven { url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2' }
	/* MEDIC FORK */ maven { url 'https://medic.github.io/crosswalk-build/maven/' }
}

// from https://stackoverflow.com/questions/28781803/embed-crosswalk-in-android-studio
/* UPSTREAM */ def xwalkVersion = 'org.xwalk:xwalk_core_library:21.51.546.6'
/* MEDIC FORK */   xwalkVersion = 'org.medicmobile.crosswalk:xwalk_core_library:0.2.1'
dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:21.0.3'
	compile xwalkVersion
}

def isReleaseBuild = {
	return System.env.JENKINS == 'true' || (System.env.TRAVIS == 'true' &&
			System.env.TRAVIS_BRANCH == 'master')
}
def getVersionCode = {
	if(isReleaseBuild()) {
		def code = System.env.TRAVIS == 'true' ?
				System.env.TRAVIS_BUILD_NUMBER :
				System.env.VERSION_TO_BUILD.split(/\./)[-1]
		return Integer.parseInt(code)
	}
	return 1
}
def getVersionName = {
	if(isReleaseBuild()) {
		if(System.env.TRAVIS == 'true') {
			def v = System.env.MEDIC_VERSION_NAME
			if(!v) throw new RuntimeException(
					'Missing required env var: MEDIC_VERSION_NAME')
			return v
		} else return System.env.VERSION_TO_BUILD
	}
	return 'SNAPSHOT'
}

android {
	compileSdkVersion 22
	buildToolsVersion '22.0.1'
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}

	defaultConfig {
		versionCode getVersionCode()
		versionName getVersionName()
		archivesBaseName = "${project.name}-${versionName}"
	}

	applicationVariants.all {
		buildConfigField "String", "ICON_CHANGER", "\"${System.env.ICON_CHANGER}\"";
		buildConfigField "boolean", "DISABLE_APP_URL_VALIDATION", "Boolean.parseBoolean(\"${System.env.DISABLE_APP_URL_VALIDATION}\")";
	}

	signingConfigs {
		release {
			storeFile file(System.env.ANDROID_KEYSTORE_PATH ?: signingConfigs.debug.storeFile)
			storePassword System.env.ANDROID_KEYSTORE_PASSWORD
			keyAlias System.env.ANDROID_KEY_ALIAS
			keyPassword System.env.ANDROID_KEY_PASSWORD
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFile getDefaultProguardFile('proguard-android.txt')
			signingConfig signingConfigs.release
		}
	}

	productFlavors {
		unbranded {
			// we will not create project-specific src directories
			// for `unbranded` - it will use the defaults in
			// src/main
		}
		medicmobiledemo {
			applicationId = 'org.medicmobile.webapp.mobile.medicmobiledemo'
		}
		livinggoods {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods'
		}
		bracuganda {
			applicationId = 'org.medicmobile.webapp.mobile.bracuganda'
		}
		livinggoodskenya {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoodskenya'
		}
		musomali {
			applicationId = 'org.medicmobile.webapp.mobile.musomali'
		}
	}
}
